---
- name: Ensure nginx is installed
  apt:
    name: nginx
    state: present

- name: Check if Cloudflare credentials exist
  stat:
    path: /etc/letsencrypt/cloudflare.ini
  register: cloudflare_creds

- name: Ensure Cloudflare credentials are configured
  fail:
    msg: "Cloudflare credentials file not found at /etc/letsencrypt/cloudflare.ini"
  when: not cloudflare_creds.stat.exists

# Generate SSL certificates for each fresh domain
- name: Generate SSL certificate for fresh domains
  command: >
    certbot certonly --dns-cloudflare
    --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini
    -d {{ fresh_domain }}
    -d *.{{ fresh_domain }}
    --non-interactive
    --agree-tos
  args:
    creates: "/etc/letsencrypt/live/{{ fresh_domain }}/fullchain.pem"
  with_subelements:
    - "{{ vhosts }}"
    - fresh_domains
    - skip_missing: True
  vars:
    fresh_domain: "{{ item.1 }}"
  register: ssl_generation

- name: Wait for DNS propagation if SSL was generated
  pause:
    seconds: 30
  when: ssl_generation.changed

# Create kawal domain configurations
- name: Create kawal domain vhost configurations
  template:
    src: kawal-vhost.conf.j2
    dest: "/etc/nginx/sites-available/{{ item.0.name }}-kawal-{{ item.1 | replace('.', '_') }}.conf"
    mode: '0644'
  with_subelements:
    - "{{ vhosts }}"
    - kawal_domains
    - skip_missing: True
  notify: reload nginx

# Create fresh domain configurations
- name: Create fresh domain vhost configurations
  template:
    src: fresh-vhost.conf.j2
    dest: "/etc/nginx/sites-available/{{ item.0.name }}-fresh-{{ item.1 | replace('.', '_') }}.conf"
    mode: '0644'
  with_subelements:
    - "{{ vhosts }}"
    - fresh_domains
    - skip_missing: True
  notify: reload nginx

# Enable kawal domain vhosts
- name: Enable kawal domain vhosts
  file:
    src: "/etc/nginx/sites-available/{{ item.0.name }}-kawal-{{ item.1 | replace('.', '_') }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.0.name }}-kawal-{{ item.1 | replace('.', '_') }}.conf"
    state: link
  with_subelements:
    - "{{ vhosts }}"
    - kawal_domains
    - skip_missing: True
  notify: reload nginx

# Enable fresh domain vhosts
- name: Enable fresh domain vhosts
  file:
    src: "/etc/nginx/sites-available/{{ item.0.name }}-fresh-{{ item.1 | replace('.', '_') }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ item.0.name }}-fresh-{{ item.1 | replace('.', '_') }}.conf"
    state: link
  with_subelements:
    - "{{ vhosts }}"
    - fresh_domains
    - skip_missing: True
  notify: reload nginx

- name: Test nginx configuration
  command: nginx -t
  register: nginx_test
  changed_when: false

- name: Display nginx test result
  debug:
    var: nginx_test.stdout_lines